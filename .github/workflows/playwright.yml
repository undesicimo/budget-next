name: Playwright Tests
on:
  push:
    branches: production
  pull_request:
    branches: production

env:
  POSTGRES_URL: postgresql://localhost:9000
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DATABASE: db
  POSTGRES_PRISMA_URL: postgresql://postgres:password@localhost:9000/db
  POSTGRES_URL_NON_POOLING: postgresql://postgres:password@localhost:9000/db?connection_limit=1

jobs:
  docker_compose:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: node:18
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_URL: postgresql://localhost:9000
          POSTGRES_USER: postgres
          POSTGRES_PRISMA_URL: postgresql://postgres:password@localhost:9000/db
          POSTGRES_URL_NON_POOLING: postgresql://postgres:password@localhost:9000/db?connection_limit=1
          POSTGRES_PASSWORD: password
          POSTGRES_DATABASE: db
          ports: 9000:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: create env
        run: |
          touch .env
          echo "POSTGRES_URL=${{ env.POSTGRES_URL }}" >> .env
          echo "POSTGRES_USER=${{ env.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DATABASE=${{ env.POSTGRES_DATABASE }}" >> .env
          echo "POSTGRES_PRISMA_URL=${{ env.POSTGRES_PRISMA_URL }}" >> .env
          echo "POSTGRES_URL_NON_POOLING=${{ env.POSTGRES_URL_NON_POOLING }}" >> .env
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
